<h1 class="item_name shadowed"><%= @product.name %></h1>
<h3><%= @product.formatted_price %></h3>
<p><h4><%= @product.description %></h4></p>
<img src="<%= @product.picture %>">


<% if current_user %>
	<div class="reviews">
	  <h3>Reviews</h3>

	  <p>Reviews for <%= @product.name %></p>

	  <div id="review-list">
		  <%= render :partial => "products/reviews" %>
	  </div>

		<% unless current_user.reviews.where(product_id: @product.id).any? %>
			<h4>New Review</h4>

			 <%= form_for [@product, @review], :remote => true do |f| %>

			  <div id="review-form-errors">
			    <%= render :partial => "/products/review_form_errors" %>
				</div>

			    <div class="field">
			      <%= f.label :comment %><br />
			      <%= f.text_area :comment %>
			    </div>
			    <div class="actions">
			      <%= f.submit %>
			    </div>

			  <% end %>
		<% end %>

		<% else %>
	  <p>Please <%= link_to "log in", new_session_path %> to add a review.</p> 
	</div>
<% end %>


<h5>
<tr>
	<td><%= link_to 'Edit', edit_product_path(@product) %></td> |
	<td><%= link_to 'Back', products_path %></td> |
	<td><%= link_to 'Delete this item', @product, method: :delete, data: { confirm: 'Are you sure?' } %></td>
</tr>
</h5>

<script type="text/javascript">
  $(function() {
     $("#new_review")
        .bind('ajax:beforeSend', function() { # set this code to happen just before the ajax request is made
          $("input[type='submit']") # make changes to the submit button
            .val('Saving...') # change the text on the button
            .attr('disabled', 'disabled'); # disable the button
        })
        .bind('ajax:complete', function() {
          $("input[type='submit']")
            .val('Create Review')
            .removeAttr('disabled');
        });
  });
</script>